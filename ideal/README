--------------------------------------------------------------------------This is a brief overview of the IDEAL system, and details on loading thesystem. --------------------------------------------------------------------------	IDEAL: Influence Diagram Evaluation and Analyis in Lisp        --------------------------------------------------------               Rockwell International Science Center                         Palo Alto, CA What IDEAL is--------------IDEAL is a test bed for work in influence diagrams and Bayesiannetworks.  It contains various inference algorithms for beliefnetworks and evaluation algorithms for influence diagrams.  Itcontains facilities for creating and editing influence diagrams andbelief networks. Implementation details -----------------------IDEAL provides a programmer's interface to belief network data structures andalgorithms and is written in pure Common Lisp.  It will run in Common Lispon any platform. The emphasis in writing IDEAL has been on codeclarity and providing high level programming abstractions. It thus isvery suitable for experimental implementations which need or extendbelief network technology.  It has been tested in LUCID Common Lisp andAllegro Common Lisp on Sun workstations, Macintosh Common Lisp and on Genera8.0. At the highest level, IDEAL can be used as a subroutine library whichprovides belief network inference and influence diagram evaluation asa package. The code is documented in a detailed manual and so it isalso possible to work at a lower level on extensions of belief networkmethods. IDEAL comes with a CLIM based graphical interface called IDEAL-EDIT.IDEAL-EDIT is a separate system that layers over IDEAL and so IDEALcan be used without it.How to get started------------------IDEAL will run in any Common Lisp implementation.1. Print out the IDEAL manual, which is named Manual.2. Read the loading instructions at the end of this file to load   the system.3. Got into the directory IDEAL-EDIT and look at the README files   there if you also want to load up the Graphic Editor.4. IDEAL has an implementation of a generalized Noisy Or model. If   you are interested in Noisy Or's print out noisy-or-note.dvi.   This article gives the mathematical basis for the model implemented   in IDEAL.Contacting us------------- Sampath Srinivas         srinivas@rpal.rockwell.com (415) 325-7174 Rockwell International Science Center,  444 High St, Palo Alto, CA 94301Loading Instructions--------------------NON-SYMBOLICS SYSTEMS:Start up a base lisp worldLoad the file load-ideal.lispExecute the function (user::load-ideal) or (user::compile-ideal)SYMBOLICS SYSTEMS:It will be necessary to set up the X.system and X.translations files requiredby genera for a system X.  This should be done by the site administrator.  Thetranslations file should mirror the translations.lisp file in the top level ofthe directory.  The system file should use the sysdcl.lisp file in the toplevel of the directory for the system source file.  After the files have beenset up, the standard Symbolics system functions can be used.Start up a base lisp worldExecute ":Compile System ideal" or ":Load System ideal"