;;; -*- Mode: LISP; Syntax: Common-lisp; Package: cl-USER -*-(in-package :cl-user);;;;********************************************************;;;;  Copyright (c) 1989, 1992 Rockwell International -- All rights reserved.;;;;  Rockwell International Science Center Palo Alto Lab;;;;********************************************************#|File:      load-ideal-edit.lispDescription:  Load file for IDEAL-EDIT system - primarily used for non-symbolics system loadsNotes:  This file must be in the top-level IDEAL-EDIT directory with translatations.lisp -   other pathnames are based off of its position|#;;;;;; we want to load the ideal system of which ideal-edit is a sub-directory;;;;;; the path variable might have to be specialized for different file systems -;;;   essentially the directory needed is one level up from *load-pathname* so;;;   a file system specific way of parsing the pathname might be needed;;;#+ignore(let* ((path #-(or mcl not-load-path)	       (format nil "~a../" (directory-namestring *load-pathname*))	     #+mcl (subseq (directory-namestring *load-pathname*) 0			   (1+ (position #\: (directory-namestring *load-pathname*)					 :from-end t					 :end (1- (length (directory-namestring *load-pathname*)))					 )))	     #+not-load-path "/narnia/ideal/released/"	       )       (filename "load-ideal.lisp")       (filepath (format nil "~a~a" path filename))       (old-ideal-load-path (if (boundp '*ideal-load-path*) *ideal-load-path* t))       )    (load filepath)    (unless (and #-mcl (find-package :logical-pathname)		 (handler-case (logical-pathname-translations "ideal")			       (error (condition)				      (ignore condition)				      nil				      ))		 (equal old-ideal-load-path *ideal-load-path*)		 )      (load-ideal)      )    );;;;;; by this point, assumes that ideal, logical-pathname code and;;;  defsystem code are loaded;;;;;;;;; set up the load path for the system;;;   THIS MIGHT NEED TO BE MANUALLY MODIFIED FOR NEW INSTALLATIONS IF THE LISP;;;   DOESN'T BIND *LOAD-PATHNAME*(defparameter *ideal-edit-load-path*  (translate-logical-pathname "ideal:ideal-edit;")  );;;;;; load the logical pathname translations for this system;;;#-genera(load (format nil "~a~a" *ideal-edit-load-path* "translations.lisp"));;;;;; load the defsystem for this system;;;(load "ideal-edit:home;sysdcl.lisp");;;;;; define load and compile functions for this system;;; (defun compile-ideal-edit (&rest args)  (load-ideal)  (apply 'compile-ideal-edit-system args)  )(defun load-ideal-edit (&rest args)  (load-ideal)  (apply 'load-ideal-edit-system args)  )